name: Deploy CI

on:
  push:
    branches: [ "main" ]

jobs:
  Build:
    runs-on: ubuntu-latest

    env:
      IMAGE_TAG: ${{ secrets.DOCKER_USERNAME }}/k8s-dash:${{ github.sha }}

    steps:
    - uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Check if image exists
      id: image_check
      run: |
        IMAGE_EXISTS=$(curl -s -o /dev/null -w "%{http_code}" \
          -u "${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_PASSWORD }}" \
          "https://hub.docker.com/v2/repositories/${{ secrets.DOCKER_USERNAME }}/k8s-dash/tags/${{ github.sha }}/")
        echo "IMAGE_EXISTS=$IMAGE_EXISTS" >> $GITHUB_ENV

    - name: Set up Docker Buildx
      if: env.IMAGE_EXISTS != '200'
      uses: docker/setup-buildx-action@v1

    - name: Build Docker image
      if: env.IMAGE_EXISTS != '200'
      run: |
        docker build --platform linux/amd64 -t $IMAGE_TAG .
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

    - name: Push Docker image
      if: env.IMAGE_EXISTS != '200'
      run: docker push $IMAGE_TAG

    - name: Print the image tag
      run: echo "Docker image tag is $IMAGE_TAG"

    - name: Conventional Changelog Action
      id: changelog
      uses: TriPSs/conventional-changelog-action@v5
      with:
        github-token: ${{ secrets.github_token }}
        output-file: "false"

    - name: Create Release
      uses: actions/create-release@v1
      if: ${{ steps.changelog.outputs.skipped == 'false' }}
      env:
        GITHUB_TOKEN: ${{ secrets.github_token }}
      with:
        tag_name: ${{ steps.changelog.outputs.tag }}
        release_name: ${{ steps.changelog.outputs.tag }}
        body: ${{ steps.changelog.outputs.clean_changelog }}

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        repository: mohamadalsalty/apps-k8s-gitops
        token: ${{ secrets.TARGET_REPO_PAT }}        

    - name: Update values.yaml
      run: |
        sed -i 's/tag: ".*"/tag: "${{ github.sha }}"/g' src/apps/golang-k8s-api/prod/values.yaml

    - name: Check for changes
      id: git_diff
      run: |
        git add src/apps/golang-k8s-api/prod/values.yaml
        if git diff --quiet --exit-code; then
          echo "has_changes=false" >> $GITHUB_ENV
        else
          echo "has_changes=true" >> $GITHUB_ENV
        fi

    - name: Commit and push changes
      if: env.has_changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -m "Update tag to ${{ github.sha }}"
        git push